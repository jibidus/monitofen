name: Tests
on:
  push:
    branches:
      - main
    tags:
      - '!*' # Do not execute on tags
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-20.04
    env:
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: |
          sudo apt-get -yqq install libpq-dev
          bundle install --no-deployment --jobs 4 --retry 3
      - run: make lint-back
      - run: make test-back
      - run: make security
      - uses: actions/upload-artifact@v2
        with:
          name: back-coverage
          path: coverage/backend/.resultset.json
  frontend:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.16.0
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: make lint-front
      - run: make test-front-coverage
      - uses: actions/upload-artifact@v2
        with:
          name: front-coverage
          path: coverage/frontend/lcov.info
  test-e2e:
    runs-on: ubuntu-20.04
    needs: [backend, frontend]
    env:
      RAILS_ENV: test
      CYPRESS_BASE_URL: http://localhost:3000
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: |
          sudo apt-get -yqq install libpq-dev
          bundle install --no-deployment --jobs 4 --retry 3
      - run: bundle exec rails db:setup
      - uses: cypress-io/github-action@v2
        with:
          start: bundle exec rails server
          wait-on: 'http://localhost:3000'
          browser: chrome
          headless: true
          command-prefix: 'percy exec --'
  test-deployment:
    runs-on: ubuntu-20.04
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: |
          sudo apt-get -yqq install libpq-dev
          bundle install --no-deployment --jobs 4 --retry 3
      - uses: actions/setup-node@v2
        with:
          node-version: 14.16.0
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: SECRET_KEY_BASE="$(bundle exec rails secret)" RAILS_ENV=production bundle exec rails assets:precompile
  docker:
    runs-on: ubuntu-20.04
    needs: [backend, frontend]
    env:
      TEST_TAG: jibidus/monitofen:test
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
